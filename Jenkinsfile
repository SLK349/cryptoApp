pipeline {    agent any    environment {        // Définir NODE_ENV peut être utile pour les scripts qui ajustent leur comportement pour dev/prod        NODE_ENV = 'development'    }    stages {        stage('Checkout') {            steps {                // Récupère le code depuis le SCM configuré                checkout scm            }        }        stage('Install dependencies') {            steps {                // Utilise 'sh' pour les commandes shell sous Unix/Linux ou 'bat' sous Windows                sh 'npm install'            }        }        stage('Test') {            steps {                // Exécuter les tests unitaires ou d'autres types de tests                sh 'npm test'            }            post {                // Gérer les résultats des tests, par exemple en marquant le build comme instable                always {                    junit '**/test-results/*.xml' // Assurez-vous que vos tests génèrent des rapports au format JUnit XML                }                success {                    echo 'Les tests ont réussi !'                }                failure {                    echo 'Les tests ont échoué !'                }            }        }        stage('Build') {            steps {                // Construire l'application pour la production                sh 'npm run build'            }        }        stage('Deploy') {            steps {                // Ajoutez vos commandes de déploiement ici                // Par exemple, copier les fichiers de build vers un serveur                echo 'Déploiement de l\'application...'                // sh 'scp -r build/* user@your-server:path/to/deploy'            }        }    }}